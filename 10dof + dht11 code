#include <Wire.h>
#include <Adafruit_Sensor.h>
#include <Adafruit_BMP085_U.h>
#include "DHT.h"
#include <Adafruit_LSM303_U.h>
#include <Adafruit_L3GD20_U.h>
#include <Adafruit_10DOF.h>

#define DHTPIN 2  
#define DHTTYPE DHT11
#define beepPin 5			// digitaler D-Pin 5 f√ºr Beeper
/*********************** Assign a unique ID to the sensors ****************************/
Adafruit_LSM303_Accel_Unified accel = Adafruit_LSM303_Accel_Unified(30301);
Adafruit_LSM303_Mag_Unified   mag   = Adafruit_LSM303_Mag_Unified(30302);
Adafruit_BMP085_Unified       bmp   = Adafruit_BMP085_Unified(18001);
Adafruit_L3GD20_Unified       gyro  = Adafruit_L3GD20_Unified(20);
/**************************************************************************************/

/*****************************Global Defines ******************************************/
float x1 = 0;
float accelX;
float accelY;
float accelZ;
float magX;
float magY;
float magZ;
float gyroX;
float gyroY;
float gyroZ;
float pressureGlobal;
float temp;
float realhight;
/**************************************************************************************/

//Adafruit_BMP085_Unified bmp = Adafruit_BMP085_Unified(10180);
DHT dht(DHTPIN, DHTTYPE);

void displaySensorDetails(void)
{
  sensor_t sensor;
  bmp.getSensor(&sensor);
  Serial.println("------------------------------------");
  Serial.print  ("Sensor:       "); Serial.println(sensor.name);
  Serial.print  ("Driver Ver:   "); Serial.println(sensor.version);
  Serial.print  ("Unique ID:    "); Serial.println(sensor.sensor_id);
  Serial.print  ("Max Value:    "); Serial.print(sensor.max_value); Serial.println(" hPa");
  Serial.print  ("Min Value:    "); Serial.print(sensor.min_value); Serial.println(" hPa");
  Serial.print  ("Resolution:   "); Serial.print(sensor.resolution); Serial.println(" hPa");  
  Serial.println("------------------------------------");
  Serial.println("");
  delay(500);
}



void setup() {
 //DHT11 BEGIN:
  Serial.begin(9600);
  Serial.println("Pressure Sensor Test"); Serial.println("");
  Serial.println("DHTxx test!");
  
  dht.begin();
  
  /* Initialise the sensor */
  if(!bmp.begin())
  {
    /* There was a problem detecting the BMP085 ... check your connections */
    Serial.print("Ooops, no BMP085 detected ... Check your wiring or I2C ADDR!");
    while(1);
  }
  
  /* Display some basic information on this sensor */
  displaySensorDetails();

//DHT11 END

// 10DOF Begin:

Serial.println(F("Adafruit 10DOF Tester")); Serial.println("");
  
    /* Initialise the sensors */
    if(!accel.begin())
      {
      /* There was a problem detecting the ADXL345 ... check your connections */
      Serial.println(F("Ooops, no LSM303 detected ... Check your wiring!"));
      while(1);
      }
    if(!mag.begin())
      {
      /* There was a problem detecting the LSM303 ... check your connections */
      Serial.println("Ooops, no LSM303 detected ... Check your wiring!");
      while(1);
      }
    if(!bmp.begin())
      {
      /* There was a problem detecting the BMP085 ... check your connections */
      Serial.print("Ooops, no BMP085 detected ... Check your wiring or I2C ADDR!");
      while(1);
      }
    if(!gyro.begin())
      {
      /* There was a problem detecting the L3GD20 ... check your connections */
      Serial.print("Ooops, no L3GD20 detected ... Check your wiring or I2C ADDR!");
      while(1);
      }
      }
void loop() {

 //DHT11 BEGIN:
  /* Get a new sensor event */ 
  sensors_event_t event1;   //1234
  bmp.getEvent(&event1); //1234
  float ep = event1.pressure;  //1234
  float temperature1;//1234
  float seaLevelPressure = SENSORS_PRESSURE_SEALEVELHPA;//1234
  float pta = (bmp.pressureToAltitude(1029,event1.pressure));//1234
  float h = dht.readHumidity();
  float t = dht.readTemperature();
  /* Display the results (barometric pressure is measure in hPa) */
  if (ep)
  {
    /* Display atmospheric pressue in hPa */
    Serial.print("Pressure:");
    Serial.print(ep);
    Serial.print("hPa    ");
    
    /* Calculating altitude with reasonable accuracy requires pressure    *
     * sea level pressure for your position at the moment the data is     *
     * converted, as well as the ambient temperature in degress           *
     * celcius.  If you don't have these values, a 'generic' value of     *
     * 1013.25 hPa can be used (defined as SENSORS_PRESSURE_SEALEVELHPA   *
     * in sensors.h), but this isn't ideal and will give variable         *
     * results from one day to the next.                                  *
     *                                                                    *
     * You can usually find the current SLP value by looking at weather   *
     * websites or from environmental information centers near any major  *
     * airport.                                                           *
     *                                                                    *
     * For example, for Paris, France you can check the current mean      *
     * pressure and sea level at: http://bit.ly/16Au8ol                   */
     
  /* First we get the current temperature from the BMP085 */
;
  

    bmp.getTemperature(&temperature1); ///1234
    Serial.print("Temperature:");
    Serial.print(temperature1); //1234
    Serial.print("C    ");

    /* Then convert the atmospheric pressure, and SLP to altitude         */
    /* Update this next line with the current SLP for better results      */
    Serial.print("Altitude:"); 
    Serial.print(pta);
    Serial.print("m    ");
    Serial.print("");
  }
  else
  {
    Serial.print("Sensor error");
  }
     if (isnan(t) || isnan(h)) 
    {
        Serial.print("Failed to read from DHT");
    } 
    else 
    {
        Serial.print("Humidity:"); 
        Serial.print(h);
        Serial.print("%t    ");
        Serial.print("Temperature:"); 
        Serial.print(t);
        Serial.print("*C");
        Serial.println();
    }
  delay(1000);
 //DHT11 END


//10DOF begin:

          sensors_event_t event;   // new sensor event
	  accel.getEvent(&event);  // get acceleration data
	  mag.getEvent(&event);    // get magnetic vector values
	  gyro.getEvent(&event);   // get gyrocope values
	  bmp.getEvent(&event);    // get pressure
	  float temperature;       // Temp
	  bmp.getTemperature(&temperature);  // write temp into float
	  float pressure = event.pressure;   // write current pressure to float
	  
	  if (event.pressure)
	  {
		float temperature;      // Temp 
		bmp.getTemperature(&temperature);
		float seaLevelPressure = SENSORS_PRESSURE_SEALEVELHPA;
		  
		if(x1 == 0) {           // get the pressure at the ground for calculating the altitude and setting this value to zero.
		  x1 = bmp.pressureToAltitude(seaLevelPressure,event.pressure,temperature); // calculating the altitude from pressure   
		  }
		
		float x2 = bmp.pressureToAltitude(seaLevelPressure,event.pressure,temperature);  // calculating altitude during flight
		float realhight = x2 - x1;      // calculating altitude over ground


	  }
 // writing the values of the sensor to global floats
       
        //acceleration :
        float accelX = event.acceleration.x;
        float accelY = event.acceleration.y;
        float accelZ = event.acceleration.z;
        Serial.print("accel = "); 
        Serial.println(event.acceleration.x); 
        Serial.print("accelY = "); 
        Serial.println(event.acceleration.y);
        Serial.print("accelZ = ");
        Serial.println(event.acceleration.z);
        
        //magnetic vector :
        
        float magX = event.magnetic.x;
        float magY = event.magnetic.y;
        float magZ = event.magnetic.z;
        Serial.print("magX = ");
        Serial.println(event.magnetic.y);
        Serial.print("magY = "); 
        Serial.println(event.magnetic.y);
        Serial.print("magZ = ");
        Serial.println(event.magnetic.z);
        
        //gyrocope values :
        
        float gyroX = event.gyro.x;
        float gyroY = event.gyro.y;
        float gyroZ = event.gyro.z;
        Serial.print("gyroX = ");
        Serial.println(event.gyro.x);
        Serial.print("gyroY = ");
        Serial.println(event.gyro.y);
        Serial.print("gyroZ = ");
        Serial.println(event.gyro.z);
        //pressure :
        float pressureGlobal = event.pressure;
        Serial.print("PressureGlobal = ");
        Serial.println(event.pressure);
        //temperature :
        float temp = temperature;
        Serial.print("Temp = ");
        Serial.println(temperature);
        //altitude :
        //float realaltitude = realhight; //1234
        
        //10DOF END

        //BEEPER START:
        
        digitalWrite (beepPin, HIGH);
		delay(100);
		digitalWrite(beepPin,LOW);
}

//beeper end (without if under 150 m )
